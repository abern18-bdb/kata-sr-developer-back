name: Deploy PR
on:
  push:
    branches: [ master ]

# jobs:
#   deploy:
#     name: Deploy PROD
#     uses: ${change-it-for-your-tribe-pipeline}
#     with:
#       version: $(node -p "require('./package.json').version")
#       description-for-version: $(node -p "require('./package.json').version")
#       path-environments-variables: >
#         pipeline/qa-env.json
#         pipeline/stg-env.json
#         pipeline/prod-env.json
#       function-name: 'function-name'
#       files-to-compress: 'node_modules static build index.js package.json'
#       prepare-files: 'cp lambda/index.js index.js'
#       function-handler: index.handler
#       function-memory-size: 128
#       function-runtime: nodejs14.x
#       path-to-env-vars: pipeline/prod-env.json
#       environment: pr
#       service-type: 'lambda'
#       build-command: >
#         npm i &&
#         npm run build &&
#         rm -r node_modules/ &&
#         npm ci --only=prod
#     secrets:
#       DIG_READER_GITHUB_ACCESS_TOKEN: ${{ secrets.DIG_READER_GITHUB_ACCESS_TOKEN }}
#       ARTIFACTORY_READER_USER: ${{ secrets.ARTIFACTORY_READER_USER }}
#       ARTIFACTORY_READER_API_KEY: ${{ secrets.ARTIFACTORY_READER_API_KEY }}
#       AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
#       AWS_ROLE_DEPLOY_BACKEND: ${{ secrets.AWS_ROLE_DEPLOY_BACKEND }}
